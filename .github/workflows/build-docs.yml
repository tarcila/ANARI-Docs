name: ANARI-Docs CI
on:
  workflow_dispatch:
  push:
    branches: [main, next_release]
  pull_request:
    branches: [main, next_release]
    types: [opened, closed, reopened, synchronize]
jobs:
  # Discard preview if any
  remove-pr-preview-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          gh pr -R ${{ github.repository }} comment --edit-last ${{ github.event.pull_request.number }} -b "~~Generated documentation~~"
          git push origin :pr-preview/${{ github.event.pull_request.number }} || :
        if: "${{ github.event_name == 'pull_request' && github.event.action != 'opened' && github.event.action != 'reopened' }}"
        env:
          GH_TOKEN: ${{ github.token }}

  # Main doc building step
  build-docs:
    runs-on: ubuntu-latest
    needs: remove-pr-preview-branch
    steps:
      - uses: actions/checkout@v4
      - run: docker run --network=host --user ${uid}:${gid} --rm -v ${PWD}:/vulkan khronosgroup/docker-images@sha256:9f5add2758a383ba329bc8c4b819dea9fb695ee629b05b7da4739ddf81d39073 make -C /vulkan html pdf
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: ANARI-Docs
          path: |
            out/html
            out/pdf
          if-no-files-found: error

  link-html-doc-to-pr-as-commit:
    runs-on: ubuntu-latest
    needs: build-docs
    if: "${{ github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')}}"
    steps:
      - uses: actions/checkout@v4
      - run: |
          git checkout --orphan pr-preview/${{ github.event.pull_request.number }}
          git rm -fr .
      - uses: actions/download-artifact@v4
        id: artifacts
        with:
          name: ANARI-Docs
          path: _ANARI-Docs
      - run: |
          mv ${{ steps.artifacts.outputs.download-path }}/html/anspec.html .
          rm -fr ${{ steps.artifacts.outputs.download-path }}
          git stage -f anspec.html
          git config --global user.name "ANARI-Docs"
          git config --global user.email "noreply@noreply"
          git commit -a -m "Update doc preview for PR ${{ github.event.pull_request.number }}"
          git push origin -f HEAD || :  # ignore push errors, in case there is no change
          HEAD="$(git rev-parse HEAD)"
          RAW_URL="https://raw.githubusercontent.com/${{ github.repository }}/${HEAD}/anspec.html"
          MESSAGE="[Generated documentation](https://html-preview.github.io/?url=${RAW_URL})"
          gh pr -R ${{ github.repository }} comment --create-if-none --edit-last ${{ github.event.pull_request.number }} -b "${MESSAGE}"
        env:
          GH_TOKEN: ${{ github.token }}
        name: Pushing preview to ANARI-Docs
